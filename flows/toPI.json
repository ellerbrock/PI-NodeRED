[{
    "id": "688897a0.58ed18",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "No",
    "func": "var path = msg.pi.pathelement;\n\nvar auth = msg.pi.auth;\nvar url = msg.pi.url;\nvar baseurl = \"/elements?path=\"; \nvar urlparam = encodeURIComponent(path);\nmsg.url = url.concat(baseurl,urlparam);\nmsg.method = \"GET\";\nmsg.headers = {\n        Authorization: auth                     \n    };\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 89.7235107421875,
    "y": 325.95745849609375,
    "wires": [
        ["b302f43.41e9c08"]
    ]
}, {
    "id": "b302f43.41e9c08",
    "type": "http request",
    "z": "eb2df935.0f26e8",
    "name": "Element WebId from PI",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 296.39013671875,
    "y": 325.95745849609375,
    "wires": [
        ["706f9439.33860c"]
    ]
}, {
    "id": "e1555375.55298",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "Yes",
    "func": "var auth = msg.pi.auth;\nvar url = msg.pi.url;\nvar webid = msg.pi.webid;\n\nvar urlparam = webid;\nvar baseurl = \"/streams/\" + urlparam + \"/value\";\n\nmsg.url = url.concat(baseurl);\nmsg.method = \"POST\";\nmsg.headers = {\n    Authorization: auth                     \n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 774.7235107421875,
    "y": 382.95745849609375,
    "wires": [
        ["7aefff44.dca8d"]
    ]
}, {
    "id": "7aefff44.dca8d",
    "type": "http request",
    "z": "eb2df935.0f26e8",
    "name": "Value to PI",
    "method": "use",
    "ret": "txt",
    "url": "",
    "tls": "",
    "x": 937.7235107421875,
    "y": 382.95745849609375,
    "wires": [
        ["fe5a0b84.78b448"]
    ]
}, {
    "id": "706f9439.33860c",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "Element WebId?",
    "func": "var auth = msg.pi.auth;\nvar url = msg.pi.url;\nvar webid = msg.payload.WebId;\n\nif (webid === null || webid === undefined) {\n// send to PI creation - will need object_type, path\n    node.warn(\"Still no webid, need to create\");\n    var msg2 = {payload:{}};\n    msg2.xmsg = msg.xmsg;\n    msg2.pi = msg.pi;\n    node.send([null,msg2]);\n}\nelse {\n    var path = msg.pi.pathelement;\n    node.warn (path + \" \" + webid );\n\n    global.set(path,webid);\n    msg.payload = msg.xmsg;\n    delete msg.xmsg;\n    node.send([msg,null]);\n}\nreturn;",
    "outputs": "2",
    "noerr": 0,
    "x": 526.7235107421875,
    "y": 326.95745849609375,
    "wires": [
        ["cfb5dbaf.1cc2d8"],
        ["68faf5d4.59de5c"]
    ]
}, {
    "id": "a2b03eaa.96b65",
    "type": "http request",
    "z": "eb2df935.0f26e8",
    "name": "Get Parent WebId",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 262.7235107421875,
    "y": 392.95745849609375,
    "wires": [
        ["7d7a146b.2cef9c"]
    ]
}, {
    "id": "7d7a146b.2cef9c",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "",
    "func": "var path = msg.pi.pathelement;\nvar auth = msg.pi.auth;\nvar url = msg.pi.url;\nvar template = msg.pi.template;\nvar elementname = msg.pi.elementname;\nvar elementdescription = msg.pi.elementdescription;\nvar webidparent = msg.payload.WebId;\n\n\nvar urlparam = webidparent;\nvar baseurl = \"/elements/\" + urlparam + \"/elements\";\nvar body = {\n  \"Name\": elementname,\n  \"Description\": elementdescription,\n  \"TemplateName\": template\n};\n\nmsg.url = url.concat(baseurl);\nmsg.method = \"POST\";\nmsg.headers = {\n    Authorization: auth                     \n    };\nmsg.payload = body;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 90.9735107421875,
    "y": 453.45745849609375,
    "wires": [
        ["78ef4241.bfd51c"]
    ]
}, {
    "id": "78ef4241.bfd51c",
    "type": "http request",
    "z": "eb2df935.0f26e8",
    "name": "Element Create",
    "method": "use",
    "ret": "txt",
    "url": "",
    "tls": "",
    "x": 254.9735107421875,
    "y": 453.45745849609375,
    "wires": [
        ["9db8763c.3ed0d8"]
    ]
}, {
    "id": "9db8763c.3ed0d8",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "",
    "func": "var path = msg.pi.pathelement;\nvar auth = msg.pi.auth;\nvar url = msg.pi.url;\nvar loc = msg.headers.location;\nvar webid = context.global.webidfromlocation(loc);\n\nvar urlparam = webid;\nvar baseurl = \"/elements/\" + urlparam + \"/config\";\n\nmsg.url = url.concat(baseurl);\nmsg.method = \"POST\";\nmsg.headers = {\n    Authorization: auth                     \n    };\nmsg.payload = \"\";\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 85.7235107421875,
    "y": 517.7074584960938,
    "wires": [
        ["7f338650.7640d8"]
    ]
}, {
    "id": "7f338650.7640d8",
    "type": "http request",
    "z": "eb2df935.0f26e8",
    "name": "Element CreateConfig",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 269.2235107421875,
    "y": 518.7074584960938,
    "wires": [
        ["79d80ad2.de0734"]
    ]
}, {
    "id": "79d80ad2.de0734",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "",
    "func": "// send entire xmsg payload back.  should check for 201 (created) or 200 (no issue)\n\n\nmsg.payload = msg.xmsg;\ndelete msg.xmsg;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 481.9735107421875,
    "y": 518.4574584960938,
    "wires": [
        ["cfb5dbaf.1cc2d8"]
    ]
}, {
    "id": "cfb5dbaf.1cc2d8",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "Yes, Parse Attributes",
    "func": "// at some point make into a bulk call message\nvar timestamp = msg.pi.timestamp;\nvar template = msg.pi.template;\n//node.warn(template);\nvar pathelement = msg.pi.pathelement;\nvar templateattributes = global.get(template);\n//node.warn(templateattributes);\n\nfor (var prop in templateattributes) {\n    var msg1 = {payload:{}};\n    var attribute = templateattributes[prop].attribute;\n//    attribute = encodeURIComponent(attribute);\n//    node.warn(attribute);\n    var path = pathelement.concat(\"|\",attribute);\n    var units = templateattributes[prop].units;\n    var value = msg['payload'][prop];\n\n    var body = {\n        Value: value,\n        Timestamp: timestamp,\n        UnitsAbbreviation: units\n    };\n    msg1.payload = body;\n    msg1.pi = msg.pi;\n    msg1.pi.path = path;\n    node.send(msg1);\n\n\n    \n}\n\nreturn;",
    "outputs": "1",
    "noerr": 0,
    "x": 813.7235107421875,
    "y": 202.95745849609375,
    "wires": [
        ["da3e287d.e05048"]
    ]
}, {
    "id": "40573534.0092ac",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "No",
    "func": "var auth = msg.pi.auth;\nvar url = msg.pi.url;\nvar path = msg.pi.path;\nvar baseurl = \"/attributes?path=\"; \nvar urlparam = encodeURIComponent(path);\nmsg.url = url.concat(baseurl,urlparam);\nmsg.method = \"GET\";\nmsg.headers = {\n        Authorization: auth                     \n    };\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 774.7235107421875,
    "y": 433.95745849609375,
    "wires": [
        ["eb6c0c10.bc69a"]
    ]
}, {
    "id": "eb6c0c10.bc69a",
    "type": "http request",
    "z": "eb2df935.0f26e8",
    "name": "Attribute WebId from PI",
    "method": "use",
    "ret": "obj",
    "url": "",
    "tls": "",
    "x": 979.3900146484375,
    "y": 433.95745849609375,
    "wires": [
        ["6b4bf57a.4ec67c"]
    ]
}, {
    "id": "6b4bf57a.4ec67c",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "",
    "func": "var path = msg.payload.Path;\n//node.warn(path);\nvar webid = msg.payload.WebId;\n//node.warn(webid);\n\nglobal.set(path,webid);\nmsg.pi.webid = webid;\nmsg.payload = msg.xmsg;\ndelete msg.xmsg;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1186.7235107421875,
    "y": 433.95745849609375,
    "wires": [
        ["e1555375.55298"]
    ]
}, {
    "id": "e60ee2c3.d2eee",
    "type": "switch",
    "z": "eb2df935.0f26e8",
    "name": "",
    "property": "topic",
    "propertyType": "msg",
    "rules": [{
        "t": "eq",
        "v": "environment",
        "vt": "str"
    }],
    "checkall": "true",
    "outputs": 1,
    "x": 560,
    "y": 68,
    "wires": [
        ["76a9b687.b834c8"]
    ]
}, {
    "id": "1c3b554d.56929b",
    "type": "rpi-sensehat in",
    "z": "eb2df935.0f26e8",
    "name": "",
    "motion": true,
    "env": true,
    "stick": true,
    "x": 76,
    "y": 69,
    "wires": [
        ["e02f85a8.64cd58"]
    ]
}, {
    "id": "76a9b687.b834c8",
    "type": "delay",
    "z": "eb2df935.0f26e8",
    "name": "",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "rateUnits": "minute",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "x": 721,
    "y": 68,
    "wires": [
        ["7602845a.71218c"]
    ]
}, {
    "id": "e02f85a8.64cd58",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "timestamp",
    "func": "var timestamp = new Date().toISOString();\nmsg.timestamp = timestamp;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 249,
    "y": 69,
    "wires": [
        ["64965729.065cd8"]
    ]
}, {
    "id": "8476aba0.40e498",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "Element WebId?",
    "func": "var msg2 = {payload:{}};\nvar path = msg.pi.pathelement;\n\nvar webid = global.get(path);\n//node.warn(webid);\n\nif (webid === null || webid === undefined) {\n    node.warn(\"No WebId\");\n    msg2.pi = msg.pi;\n    msg2.xmsg = msg.payload;\n    node.send([null,msg2]);\n}\nelse {\n    node.send([msg,null]);    \n}\n\nreturn;\n",
    "outputs": "2",
    "noerr": 0,
    "x": 126,
    "y": 206,
    "wires": [
        ["cfb5dbaf.1cc2d8"],
        ["688897a0.58ed18"]
    ]
}, {
    "id": "7602845a.71218c",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "pi info init",
    "func": "// pathelementparent must be created in PI before starting interface\n// new elements will be created as needed\n// template attributes need to match in PI and globals\nvar iotid = global.get(\"iotid\");\n//change this to make a unique device/element\n//var elementname = \"rpi-1\";\nvar elementname = iotid;\nvar elementdescription = \"Raspberry PI with PI Sense Hat\";\nvar sourcesys = \"rpi\";\nvar template = \"pisensehat\";\nvar auth = global.get(\"pi\").auth;\nvar url = global.get(\"pi\").url;\nvar pathelementparent = global.get(\"pi\").afdb.concat(\"\\\\\",sourcesys,\"\\\\\",template);\nvar pathelement = pathelementparent.concat(\"\\\\\",elementname);\nvar timestamp = msg.timestamp;\n\nmsg.pi = {\n    elementname: elementname,\n    elementdescription: elementdescription,\n    sourcesys: sourcesys,\n    template: template,\n    auth: auth,\n    url: url,\n    pathelementparent: pathelementparent ,\n    pathelement: pathelement,\n    timestamp: timestamp\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 903,
    "y": 69,
    "wires": [
        ["8476aba0.40e498"]
    ]
}, {
    "id": "68faf5d4.59de5c",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "",
    "func": "var auth = msg.pi.auth;\nvar url = msg.pi.url;\nvar path = msg.pi.pathelementparent;\n\nurlparam = encodeURIComponent(path);\nbaseurl = \"/elements?path=\" + urlparam;\nmsg.url = url.concat(baseurl);\nmsg.method = \"GET\";\nmsg.headers = {\n    Authorization: auth                     \n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 89,
    "y": 393,
    "wires": [
        ["a2b03eaa.96b65"]
    ]
}, {
    "id": "da3e287d.e05048",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "Yes, Attribute WebId?",
    "func": "var path = msg.pi.path;\n//node.warn(path);\nvar webid = global.get(path);\n//node.warn(webid);\n\nif (webid === null || webid === undefined) {    \n    msg.xmsg = msg.payload;\n    node.send([null, msg]);    \n}\n    else\n{\n    msg.pi.webid = webid;    \n    node.send([msg, null]);\n}\n\nreturn;",
    "outputs": "2",
    "noerr": 0,
    "x": 822,
    "y": 326,
    "wires": [
        ["e1555375.55298"],
        ["40573534.0092ac"]
    ]
}, {
    "id": "98a8474d.390598",
    "type": "comment",
    "z": "eb2df935.0f26e8",
    "name": "Get Element PI WebId and create Element if needed",
    "info": "",
    "x": 239,
    "y": 278,
    "wires": []
}, {
    "id": "718e4842.73bbc8",
    "type": "comment",
    "z": "eb2df935.0f26e8",
    "name": "Write to PI",
    "info": "",
    "x": 782,
    "y": 277,
    "wires": []
}, {
    "id": "64965729.065cd8",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "id check",
    "func": "var iotid = global.get(\"iotid\");\n\nif (iotid === null || iotid === undefined) {\n    node.warn(\"No iotid\");\n    node.send([null,msg]);\n}\nelse {\n    node.send([msg,null]);    \n}\n\nreturn;\n",
    "outputs": "2",
    "noerr": 0,
    "x": 419,
    "y": 72,
    "wires": [
        ["e60ee2c3.d2eee"],
        ["90df9464.e38c68"]
    ]
}, {
    "id": "90df9464.e38c68",
    "type": "delay",
    "z": "eb2df935.0f26e8",
    "name": "",
    "pauseType": "delay",
    "timeout": "2",
    "timeoutUnits": "seconds",
    "rate": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 418,
    "y": 121,
    "wires": [
        ["64965729.065cd8"]
    ]
}, {
    "id": "d3b93041.94fab",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "ERCOT Capacity",
    "func": "/// http://www.ercot.com/content/cdr/html/as_capacity_monitor.html\n\n\n//return msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 311,
    "y": 863.8888549804688,
    "wires": [
        []
    ]
}, {
    "id": "85ff7fb7.599bc",
    "type": "xml",
    "z": "eb2df935.0f26e8",
    "name": "",
    "attr": "",
    "chr": "",
    "x": 741,
    "y": 686,
    "wires": [
        ["95e0de8f.d55f7"]
    ]
}, {
    "id": "cb9ed13d.33257",
    "type": "inject",
    "z": "eb2df935.0f26e8",
    "name": "5 minute - not start",
    "topic": "",
    "payload": "",
    "payloadType": "str",
    "repeat": "300",
    "crontab": "",
    "once": false,
    "x": 130,
    "y": 686,
    "wires": [
        ["5070a472.e108ac", "9271dcb5.b2b9f"]
    ]
}, {
    "id": "4ba0f798.33e288",
    "type": "http request",
    "z": "eb2df935.0f26e8",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "tls": "",
    "x": 594,
    "y": 686,
    "wires": [
        ["85ff7fb7.599bc"]
    ]
}, {
    "id": "e309ddd.73b912",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "pre http",
    "func": "var stationid = msg.stationid;\nvar baseurl = \"http://www.weather.gov/xml/current_obs/\";\nvar urlsuffix = \".xml\";\nvar url = baseurl.concat(stationid,urlsuffix);\n//var timestamp = new Date().toISOString();\n//msg.timestamp = timestamp;\nmsg.url = url;\nmsg.method = \"GET\";\nmsg.headers = {\n         \"User-Agent\": \"<youruseragent>/v1.0 (http://<yourhomepage>; <youremail>)\"                   \n    };\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 448,
    "y": 686,
    "wires": [
        ["4ba0f798.33e288"]
    ]
}, {
    "id": "95e0de8f.d55f7",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "Deindex / Flatten json",
    "func": "var t = msg.payload.current_observation['station_id'][0];\n//var t = msg.payload.current_observation.station_id[0];\n\nvar current_observation = msg.payload.current_observation;\nvar tmpmsg = {payload:{}};\n\nfor (var prop in current_observation) {\n    tmpmsg.payload[prop] = current_observation[prop][0];\n}\n\nmsg.payload = tmpmsg.payload;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 924.4545288085938,
    "y": 685.8181762695312,
    "wires": [
        ["30dfe052.92bed"]
    ]
}, {
    "id": "30dfe052.92bed",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "pi info init",
    "func": "var timestamp_rfc822 = msg.payload.observation_time_rfc822;\nvar timestamp = new Date(timestamp_rfc822).toISOString();\n\n// pathelementparent must be created in PI before starting interface\n// new elements will be created as needed\n// template attributes need to match in PI and globals\n\n//change this to make a unique station/element\n//var elementname = \"KIAH\";\nvar elementname = msg.stationid;\nvar elementdescription = msg.stationdesc;\n// note if using . use \\. \nvar sourcesys = \"externalservices\";\nvar template = \"weather_gov_station\";\nvar parent = \"weather_gov\";\nvar auth = global.get(\"pi\").auth;\nvar url = global.get(\"pi\").url;\nvar pathelementparent = global.get(\"pi\").afdb.concat(\"\\\\\",sourcesys,\"\\\\\",parent);\nvar pathelement = pathelementparent.concat(\"\\\\\",elementname);\n\n\n\nmsg.pi = {\n    elementname: elementname,\n    elementdescription: elementdescription,\n    sourcesys: sourcesys,\n    template: template,\n    auth: auth,\n    url: url,\n    pathelementparent: pathelementparent ,\n    pathelement: pathelement,\n    timestamp: timestamp\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 1123.9091796875,
    "y": 687.0908813476562,
    "wires": [
        ["c064cc42.23881", "e574f824.70fcd8", "8476aba0.40e498"]
    ]
}, {
    "id": "1bffa31e.6dce5d",
    "type": "inject",
    "z": "eb2df935.0f26e8",
    "name": "15 sec - at start",
    "topic": "",
    "payload": "",
    "payloadType": "str",
    "repeat": "15",
    "crontab": "",
    "once": false,
    "x": 115.77777862548828,
    "y": 794.3333034515381,
    "wires": [
        ["fdca3242.a1cdc"]
    ]
}, {
    "id": "fdca3242.a1cdc",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "ERCOT Realtime",
    "func": "var baseurl = \"http://www.ercot.com/content/cdr/html/real_time_system_conditions.html\";\n\nmsg.url = baseurl;\nmsg.method = \"GET\";\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 313.3333435058594,
    "y": 793.1110887527466,
    "wires": [
        ["7157ec7.6e42514"]
    ]
}, {
    "id": "7157ec7.6e42514",
    "type": "http request",
    "z": "eb2df935.0f26e8",
    "name": "",
    "method": "use",
    "ret": "txt",
    "url": "",
    "tls": "",
    "x": 484,
    "y": 792,
    "wires": [
        ["f62116f4.430608"]
    ]
}, {
    "id": "f62116f4.430608",
    "type": "html",
    "z": "eb2df935.0f26e8",
    "name": "html parse",
    "tag": ".schedTime, .tdLeft, .labelClassCenter",
    "ret": "html",
    "as": "single",
    "x": 671,
    "y": 793,
    "wires": [
        ["dfe937bc.3e8bf8"]
    ]
}, {
    "id": "dfe937bc.3e8bf8",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "pi info init",
    "func": "var timestampepoch = new Date().valueOf();\nvar payload = msg.payload; \nvar msg1 = {payload:{}};\nvar rawtimestamp = payload[0];\n// need to calculate UTC offset as there \n// is no OOB time zone function, otherwise \n// DST will not be handled correctly.  \nvar cstimestamp = rawtimestamp.replace(\"Last Updated: \",\"\");\nvar timestamplocalsec = new Date(cstimestamp).valueOf();\nvar offsethr = Math.round((timestamplocalsec - timestampepoch)/1000/3600);\n//node.warn(offsethr);\nvar msec = timestamplocalsec - offsethr*3600*1000;\nvar timestamp = new Date(msec).toISOString();\n//node.warn(timestamp);\n\nvar elementname = \"realtime\";\nvar elementdescription = \"Real-Time System Conditions\";\nvar sourcesys = \"externalservices\";\nvar parent = \"ercot_com\";\nvar template = parent.concat(\"_\",elementname);\nvar auth = global.get(\"pi\").auth;\nvar url = global.get(\"pi\").url;\nvar pathelementparent = global.get(\"pi\").afdb.concat(\"\\\\\",sourcesys,\"\\\\\",parent);\nvar pathelement = pathelementparent.concat(\"\\\\\",elementname);\n\nmsg1.pi = {\n    elementname: elementname,\n    elementdescription: elementdescription,\n    sourcesys: sourcesys,\n    template: template,\n    auth: auth,\n    url: url,\n    pathelementparent: pathelementparent ,\n    pathelement: pathelement,\n    timestamp: timestamp\n};\n\nvar body = {};\nfor (var i = 1; i < payload.length; i+=2) {\n    body[payload[i]] = payload[i+1];\n}\n//node.warn(body);\n\nmsg1.payload = body;\n\nreturn msg1;",
    "outputs": 1,
    "noerr": 0,
    "x": 864,
    "y": 793,
    "wires": [
        ["e574f824.70fcd8", "c064cc42.23881", "8476aba0.40e498"]
    ]
}, {
    "id": "c064cc42.23881",
    "type": "debug",
    "z": "eb2df935.0f26e8",
    "name": "",
    "active": false,
    "console": "false",
    "complete": "pi",
    "x": 1305.4444274902344,
    "y": 764.4444074630737,
    "wires": []
}, {
    "id": "5070a472.e108ac",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "KIAH",
    "func": "var stationid = \"KIAH\";\nvar stationdesc = \"Houston Intercontinental Airport, TX\";\n\nmsg.stationid = stationid;\nmsg.stationdesc = stationdesc;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 303,
    "y": 651,
    "wires": [
        ["e309ddd.73b912"]
    ]
}, {
    "id": "fe5a0b84.78b448",
    "type": "debug",
    "z": "eb2df935.0f26e8",
    "name": "",
    "active": false,
    "console": "false",
    "complete": "headers",
    "x": 1115,
    "y": 383,
    "wires": []
}, {
    "id": "e574f824.70fcd8",
    "type": "debug",
    "z": "eb2df935.0f26e8",
    "name": "",
    "active": false,
    "console": "false",
    "complete": "payload",
    "x": 1312.2222595214844,
    "y": 705.5555419921875,
    "wires": []
}, {
    "id": "9271dcb5.b2b9f",
    "type": "function",
    "z": "eb2df935.0f26e8",
    "name": "KHOU",
    "func": "var stationid = \"KHOU\";\nvar stationdesc = \"Houston Hobby Airport, TX\";\n\nmsg.stationid = stationid;\nmsg.stationdesc = stationdesc;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 301.1111068725586,
    "y": 704.4444599151611,
    "wires": [
        ["e309ddd.73b912"]
    ]
}, {
    "id": "3acf571b.4845e8",
    "type": "inject",
    "z": "eb2df935.0f26e8",
    "name": "",
    "topic": "",
    "payload": "",
    "payloadType": "str",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 76.66666412353516,
    "y": 750.0000095367432,
    "wires": [
        []
    ]
}]